{
    "window.menuBarVisibility": "toggle",
    "editor.fontSize": 20,
    "editor.scrollbar.verticalScrollbarSize": 15,
    "security.workspace.trust.untrustedFiles": "newWindow",
    "security.workspace.trust.startupPrompt": "never",
    "security.workspace.trust.enabled": false,
    "editor.fontFamily": "'JetBrainsMono Nerd Font Mono','Hack Nerd Font Mono'",
    "extensions.autoUpdate": false,
    "terminal.external.linuxExec": "Konsole",
    "terminal.explorerKind": "both",
    "terminal.sourceControlRepositoriesKind": "both",
    "telemetry.telemetryLevel": "off",
    "Codegeex.Privacy": true,
    "extensions.ignoreRecommendations": true,
    "editor.minimap.enabled": false,
    "cmake.configureOnOpen": true,
    "editor.stickyScroll.scrollWithEditor": false,
    "editor.scrollbar.horizontalScrollbarSize": 10,
    "editor.scrollbar.vertical": "visible",
    "editor.scrollbar.horizontal": "visible",
    "cmake.options.statusBarVisibility": "visible",
    "cmake.showOptionsMovedNotification": false,
    "editor.guides.bracketPairs": true,
    "explorer.confirmDelete": false,
    "scm.inputFontFamily": "'JetBrainsMono Nerd Font Mono'",
    "terminal.integrated.fontSize": 17,
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ],
    "editor.codeLensFontFamily": "'JetBrainsMono Nerd Font Mono'",
    "editor.inlineSuggest.fontFamily": "'JetBrainsMono Nerd Font Mono'",
    "debug.console.fontFamily": "'JetBrainsMono Nerd Font Mono'",
    "chat.editor.fontFamily": "'JetBrainsMono Nerd Font Mono'",
    "editor.experimentalInlineEdit.fontFamily": "'JetBrainsMono Nerd Font Mono'",
    "notebook.output.fontFamily": "'JetBrainsMono Nerd Font Mono'",
    "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
    "explorer.confirmDragAndDrop": false,
    "editor.fontLigatures": true,
    "editor.fontVariations": true,
    "cmake.showConfigureWithDebuggerNotification": false,
    "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": true,
    "markdown-preview-enhanced.codeBlockTheme": "atom-dark.css",
    "markdown-preview-enhanced.previewTheme": "atom-dark.css",
    "markdown-pdf.breaks": true,
    "markdown-pdf.displayHeaderFooter": false,
    "markdown-preview-enhanced.enableExtendedTableSyntax": true,
    "markdown-preview-enhanced.enableHTML5Embed": true,
    "markdown-preview-enhanced.enablePreviewZenMode": true,
    "markdown-preview-enhanced.enableScriptExecution": true,
    "markdown-preview-enhanced.enableTypographer": true,
    "markdown-preview-enhanced.HTML5EmbedIsAllowedHttp": true,
    "markdown-preview-enhanced.HTML5EmbedUseLinkSyntax": true,
    "Codegeex.License": "",
    "Codegeex.CompletionDelay": 2,
    "git.confirmSync": false,
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.formatOnSave": true
    },
    "clangFormat.style": "LLVM",
    "lldb.consoleMode": "split",
    "xmake.runMode": "buildRun",
    "clangd.checkUpdates": true,
    "clangd.path": "/home/dav1ngen/.config/Code/User/globalStorage/kylinideteam.kylin-clangd/install/19.1.2/clangd_19.1.2/bin/clangd",
    "codegeex.codeLens.enableCodeLens": "disable",
    "cpplint.excludes": [],
    "editor.tabSize": 2,
    "Codegeex.Chat.fontSize": 19,
    "cpplint.cpplintPath": "/usr/bin/cpplint",
    "lldb.suppressUpdateNotifications": true,
    "editor.mouseWheelZoom": true,
    "python.createEnvironment.trigger": "off",
    "git.autofetch": true,
    "[cmake]": {
        "editor.defaultFormatter": "cheshirekow.cmake-format"
    },
    "clang-format.executable": "/usr/bin/clang-format-14",
    "terminal.integrated.stickyScroll.enabled": false,
    "explorer.confirmPasteNative": false,
    "geminicodeassist.project": "atomic-passage-pf3dl",
    "vcpkg.general.vcpkgPath": "/usr/local/share/vcpkg",
    "cmake.generator": "Unix Makefiles",
    "cmake.buildDirectory": "${workspaceFolder}/build",
    "cmake.configureArgs": [
        "-DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake",
        "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
    ],
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",

     "clangd.arguments": [
        "--compile-commands-dir=${workspaceFolder}/build",
        "--background-index",
        "--header-insertion=never"
    ],
    "cmake.buildBeforeRun": true
}
